# Generated by Django 2.2.16 on 2020-09-15 12:35

from django.conf import settings
import django.contrib.postgres.fields.jsonb
import django.contrib.postgres.fields.ranges
from django.db import migrations, models
import django.db.models.deletion
import django_better_admin_arrayfield.models.fields
import django_extensions.db.fields
import dll.content.models
import dll.general.models
import filer.fields.image
import simple_history.models


class Migration(migrations.Migration):
    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        ("sites", "0002_alter_domain_unique"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        migrations.swappable_dependency(settings.FILER_IMAGE_MODEL),
        ("content", "0017_auto_20200909_1533"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalTrend",
            fields=[
                (
                    "content_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="content.Content",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "publisher_is_draft",
                    models.BooleanField(db_index=True, default=True, editable=False),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=200,
                        verbose_name="Titel des Tools/Trends/Unterrichtsbausteins",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True,
                        default=dll.content.models.get_default_created_time,
                        null=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "slug",
                    dll.general.models.DllSlugField(
                        allow_duplicates=True,
                        blank=True,
                        editable=False,
                        max_length=200,
                        overwrite=True,
                        populate_from="name",
                    ),
                ),
                (
                    "teaser",
                    models.TextField(
                        blank=True, max_length=140, null=True, verbose_name="Teaser"
                    ),
                ),
                (
                    "learning_goals",
                    django_better_admin_arrayfield.models.fields.ArrayField(
                        base_field=models.CharField(max_length=850),
                        blank=True,
                        default=list,
                        null=True,
                        size=None,
                        verbose_name="Lernziele",
                    ),
                ),
                ("view_count", models.PositiveIntegerField(default=0, editable=False)),
                (
                    "base_folder",
                    models.CharField(editable=False, max_length=100, null=True),
                ),
                (
                    "additional_info",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Hinweise/Anmerkungen/Hintergrund",
                    ),
                ),
                (
                    "json_data",
                    django.contrib.postgres.fields.jsonb.JSONField(default=dict),
                ),
                (
                    "ex_authors",
                    models.CharField(
                        blank=True, max_length=800, null=True, verbose_name="Ex-Autoren"
                    ),
                ),
                (
                    "language",
                    models.CharField(
                        blank=True,
                        choices=[("german", "Deutsch"), ("english", "Englisch")],
                        max_length=10,
                        null=True,
                        verbose_name="Sprache",
                    ),
                ),
                (
                    "licence",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "CC0"),
                            (1, "CC BY"),
                            (2, "CC BY 4.0"),
                            (3, "CC BY-NC"),
                            (4, "CC BY-NC-ND"),
                            (5, "CC BY-NC-SA"),
                            (6, "CC BY-ND"),
                            (7, "CC BY-SA"),
                            (8, "CC BY-SA 4.0"),
                            (9, "urheberrechtlich geschützt"),
                        ],
                        null=True,
                        verbose_name="Lizenz",
                    ),
                ),
                (
                    "category",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Keine Angaben"),
                            (1, "Forschung"),
                            (2, "Portal"),
                            (3, "Praxisbeispiel"),
                            (4, "Veröffentlichung"),
                        ],
                        null=True,
                        verbose_name="Kategorie",
                    ),
                ),
                (
                    "target_group",
                    django_better_admin_arrayfield.models.fields.ArrayField(
                        base_field=models.CharField(max_length=300),
                        blank=True,
                        default=list,
                        null=True,
                        size=None,
                        verbose_name="Zielgruppe",
                    ),
                ),
                (
                    "publisher",
                    django_better_admin_arrayfield.models.fields.ArrayField(
                        base_field=models.CharField(max_length=300),
                        blank=True,
                        default=list,
                        null=True,
                        size=None,
                        verbose_name="Herausgeber",
                    ),
                ),
                (
                    "publisher_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Datum der Veröffentlichung"
                    ),
                ),
                (
                    "central_contents",
                    models.TextField(
                        blank=True, null=True, verbose_name="Zentrale Inhalte"
                    ),
                ),
                (
                    "citation_info",
                    models.CharField(
                        blank=True,
                        max_length=500,
                        null=True,
                        verbose_name="Zitierhinweis",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Ersteller",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "image",
                    filer.fields.image.FilerImageField(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.FILER_IMAGE_MODEL,
                        verbose_name="Anzeigebild",
                    ),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.ContentType",
                    ),
                ),
                (
                    "publisher_linked",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="content.Content",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=1,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="sites.Site",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Trend",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalTool",
            fields=[
                (
                    "content_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="content.Content",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "publisher_is_draft",
                    models.BooleanField(db_index=True, default=True, editable=False),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=200,
                        verbose_name="Titel des Tools/Trends/Unterrichtsbausteins",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True,
                        default=dll.content.models.get_default_created_time,
                        null=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "slug",
                    dll.general.models.DllSlugField(
                        allow_duplicates=True,
                        blank=True,
                        editable=False,
                        max_length=200,
                        overwrite=True,
                        populate_from="name",
                    ),
                ),
                (
                    "teaser",
                    models.TextField(
                        blank=True, max_length=140, null=True, verbose_name="Teaser"
                    ),
                ),
                (
                    "learning_goals",
                    django_better_admin_arrayfield.models.fields.ArrayField(
                        base_field=models.CharField(max_length=850),
                        blank=True,
                        default=list,
                        null=True,
                        size=None,
                        verbose_name="Lernziele",
                    ),
                ),
                ("view_count", models.PositiveIntegerField(default=0, editable=False)),
                (
                    "base_folder",
                    models.CharField(editable=False, max_length=100, null=True),
                ),
                (
                    "additional_info",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Hinweise/Anmerkungen/Hintergrund",
                    ),
                ),
                (
                    "json_data",
                    django.contrib.postgres.fields.jsonb.JSONField(default=dict),
                ),
                (
                    "ex_authors",
                    models.CharField(
                        blank=True, max_length=800, null=True, verbose_name="Ex-Autoren"
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("on", "Online"),
                            ("off", "Offline"),
                            ("onoff", "Online & Offline"),
                        ],
                        default=None,
                        max_length=7,
                        null=True,
                        verbose_name="Status",
                    ),
                ),
                ("requires_registration", models.BooleanField(null=True)),
                (
                    "usk",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("usk0", "Ohne Altersbeschränkung"),
                            ("usk6", "Ab 6 Jahren"),
                            ("usk12", "Ab 12 Jahren"),
                            ("usk16", "Ab 16 Jahren"),
                            ("usk18", "Ab 18 Jahren"),
                        ],
                        max_length=5,
                        null=True,
                        verbose_name="Altersfreigabe",
                    ),
                ),
                (
                    "pro",
                    django_better_admin_arrayfield.models.fields.ArrayField(
                        base_field=models.CharField(max_length=300),
                        blank=True,
                        default=list,
                        null=True,
                        size=None,
                        verbose_name="Pro",
                    ),
                ),
                (
                    "contra",
                    django_better_admin_arrayfield.models.fields.ArrayField(
                        base_field=models.CharField(max_length=300),
                        blank=True,
                        default=list,
                        null=True,
                        size=None,
                        verbose_name="Kontra",
                    ),
                ),
                (
                    "privacy",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "Unbekannt"),
                            (1, "Es werden keinerlei Daten erhoben"),
                            (
                                2,
                                "Personenbezogene Daten wie z.B. Logins werden geschützt auf dem Server abgelegt. Es greift die EU-Datenschutz-Grundverordnung.",
                            ),
                            (
                                3,
                                "Personenbezogene Daten werden erhoben. Dritte haben Zugriff auf diese Daten. Es greift die EU-Datenschutz-Grundverordnung.",
                            ),
                            (
                                4,
                                "Personenbezogene Daten werden erhoben. Es greift NICHT die EU-Datenschutz-Grundverordnung.",
                            ),
                        ],
                        null=True,
                        verbose_name="Datenschutz",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Beschreibung"
                    ),
                ),
                (
                    "usage",
                    models.TextField(blank=True, null=True, verbose_name="Nutzung"),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Ersteller",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "image",
                    filer.fields.image.FilerImageField(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.FILER_IMAGE_MODEL,
                        verbose_name="Anzeigebild",
                    ),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.ContentType",
                    ),
                ),
                (
                    "publisher_linked",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="content.Content",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=1,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="sites.Site",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Tool",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalTeachingModule",
            fields=[
                (
                    "content_ptr",
                    models.ForeignKey(
                        auto_created=True,
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        parent_link=True,
                        related_name="+",
                        to="content.Content",
                    ),
                ),
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "publisher_is_draft",
                    models.BooleanField(db_index=True, default=True, editable=False),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=200,
                        verbose_name="Titel des Tools/Trends/Unterrichtsbausteins",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True,
                        default=dll.content.models.get_default_created_time,
                        null=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "slug",
                    dll.general.models.DllSlugField(
                        allow_duplicates=True,
                        blank=True,
                        editable=False,
                        max_length=200,
                        overwrite=True,
                        populate_from="name",
                    ),
                ),
                (
                    "teaser",
                    models.TextField(
                        blank=True, max_length=140, null=True, verbose_name="Teaser"
                    ),
                ),
                (
                    "learning_goals",
                    django_better_admin_arrayfield.models.fields.ArrayField(
                        base_field=models.CharField(max_length=850),
                        blank=True,
                        default=list,
                        null=True,
                        size=None,
                        verbose_name="Lernziele",
                    ),
                ),
                ("view_count", models.PositiveIntegerField(default=0, editable=False)),
                (
                    "base_folder",
                    models.CharField(editable=False, max_length=100, null=True),
                ),
                (
                    "additional_info",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Hinweise/Anmerkungen/Hintergrund",
                    ),
                ),
                (
                    "json_data",
                    django.contrib.postgres.fields.jsonb.JSONField(default=dict),
                ),
                (
                    "ex_authors",
                    models.CharField(
                        blank=True, max_length=800, null=True, verbose_name="Ex-Autoren"
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True, null=True, verbose_name="Beschreibung"
                    ),
                ),
                (
                    "subject_of_tuition",
                    models.TextField(
                        blank=True,
                        max_length=2000,
                        null=True,
                        verbose_name="Unterichtsgegenstand",
                    ),
                ),
                (
                    "educational_plan_reference",
                    models.TextField(
                        blank=True, null=True, verbose_name="Bildungsplanbezug"
                    ),
                ),
                (
                    "school_class",
                    django.contrib.postgres.fields.ranges.IntegerRangeField(
                        blank=True, null=True, verbose_name="Jahrgangsstufe"
                    ),
                ),
                (
                    "estimated_time",
                    models.CharField(
                        blank=True, max_length=300, null=True, verbose_name="Zeitumfang"
                    ),
                ),
                (
                    "equipment",
                    django_better_admin_arrayfield.models.fields.ArrayField(
                        base_field=models.CharField(max_length=350),
                        blank=True,
                        default=list,
                        null=True,
                        size=None,
                        verbose_name="Ausstattung",
                    ),
                ),
                (
                    "state",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("baden-wuerttemberg", "Baden-Württemberg"),
                            ("bayern", "Bayern"),
                            ("berlin", "Berlin"),
                            ("brandenburg", "Brandenburg"),
                            ("bremen", "Bremen"),
                            ("hamburg", "Hamburg"),
                            ("hessen", "Hessen"),
                            ("mecklenburg-vorpommern", "Mecklenburg-Vorpommern"),
                            ("niedersachsen", "Niedersachsen"),
                            ("nordrhein-westfalen", "Nordrhein-Westfalen"),
                            ("rheinland-pfalz", "Rheinland-Pfalz"),
                            ("saarland", "Saarland"),
                            ("sachsen", "Sachsen"),
                            ("sachsen-anhalt", "Sachsen-Anhalt"),
                            ("schleswig-holstein", "Schleswig-Holstein"),
                            ("thueringen", "Thüringen"),
                        ],
                        max_length=22,
                        null=True,
                        verbose_name="Bundesland",
                    ),
                ),
                (
                    "differentiating_attribute",
                    models.TextField(
                        blank=True, null=True, verbose_name="Differenzierung"
                    ),
                ),
                (
                    "expertise",
                    django_better_admin_arrayfield.models.fields.ArrayField(
                        base_field=models.CharField(max_length=1500),
                        blank=True,
                        default=list,
                        null=True,
                        size=None,
                        verbose_name="Fachkompetenzen",
                    ),
                ),
                (
                    "licence",
                    models.IntegerField(
                        blank=True,
                        choices=[
                            (0, "CC0"),
                            (1, "CC BY"),
                            (2, "CC BY 4.0"),
                            (3, "CC BY-NC"),
                            (4, "CC BY-NC-ND"),
                            (5, "CC BY-NC-SA"),
                            (6, "CC BY-ND"),
                            (7, "CC BY-SA"),
                            (8, "CC BY-SA 4.0"),
                            (9, "urheberrechtlich geschützt"),
                        ],
                        null=True,
                        verbose_name="Lizenz",
                    ),
                ),
                (
                    "hybrid",
                    models.BooleanField(
                        default=False, verbose_name="Geeignet für Hybridunterricht"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Ersteller",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "image",
                    filer.fields.image.FilerImageField(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.FILER_IMAGE_MODEL,
                        verbose_name="Anzeigebild",
                    ),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.ContentType",
                    ),
                ),
                (
                    "publisher_linked",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="content.Content",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=1,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="sites.Site",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Unterrichtsbaustein",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalContent",
            fields=[
                (
                    "id",
                    models.IntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "modified",
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name="modified"
                    ),
                ),
                (
                    "publisher_is_draft",
                    models.BooleanField(db_index=True, default=True, editable=False),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=200,
                        verbose_name="Titel des Tools/Trends/Unterrichtsbausteins",
                    ),
                ),
                (
                    "created",
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True,
                        default=dll.content.models.get_default_created_time,
                        null=True,
                        verbose_name="created",
                    ),
                ),
                (
                    "slug",
                    dll.general.models.DllSlugField(
                        allow_duplicates=True,
                        blank=True,
                        editable=False,
                        max_length=200,
                        overwrite=True,
                        populate_from="name",
                    ),
                ),
                (
                    "teaser",
                    models.TextField(
                        blank=True, max_length=140, null=True, verbose_name="Teaser"
                    ),
                ),
                (
                    "learning_goals",
                    django_better_admin_arrayfield.models.fields.ArrayField(
                        base_field=models.CharField(max_length=850),
                        blank=True,
                        default=list,
                        null=True,
                        size=None,
                        verbose_name="Lernziele",
                    ),
                ),
                ("view_count", models.PositiveIntegerField(default=0, editable=False)),
                (
                    "base_folder",
                    models.CharField(editable=False, max_length=100, null=True),
                ),
                (
                    "additional_info",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Hinweise/Anmerkungen/Hintergrund",
                    ),
                ),
                (
                    "json_data",
                    django.contrib.postgres.fields.jsonb.JSONField(default=dict),
                ),
                (
                    "ex_authors",
                    models.CharField(
                        blank=True, max_length=800, null=True, verbose_name="Ex-Autoren"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "author",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Ersteller",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "image",
                    filer.fields.image.FilerImageField(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.FILER_IMAGE_MODEL,
                        verbose_name="Anzeigebild",
                    ),
                ),
                (
                    "polymorphic_ctype",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="contenttypes.ContentType",
                    ),
                ),
                (
                    "publisher_linked",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        editable=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="content.Content",
                    ),
                ),
                (
                    "site",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default=1,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="sites.Site",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Inhalt",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
