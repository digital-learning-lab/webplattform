version: '3'

services:
  db:
    image: postgres:12
    environment:
      - POSTGRES_PASSWORD=
      - POSTGRES_HOST_AUTH_METHOD=trust
  webpack:
    command: npm run start
    volumes:
      - ./dll/static:/node_deps/static
    build:
      context: .
      dockerfile: Dockerfile.build
  web:
    build:
        context: .
        dockerfile: Dockerfile.dev
    command: python manage.py runserver 0.0.0.0:8000
    env_file: .env
    image: dll_web
    environment:
      - DJANGO_SETTINGS_MODULE=dll.configuration.settings
    volumes:
      - .:/code
    user: "1000:1000"
    ports:
      - "8000:8000"
    depends_on:
      - db
      - solr
  web_dlt:
    build:
        context: .
        dockerfile: Dockerfile.dev
    command: python manage.py runserver 0.0.0.0:8000
    env_file: .env
    environment:
      - DJANGO_SETTINGS_MODULE=dll.configuration.settings_dlt
    image: dll_web
    volumes:
      - .:/code
    user: "1000:1000"
    ports:
      - "9000:8000"
    depends_on:
      - db
      - solr
  redis:
    image: "redis:alpine"
    hostname: redis
  celery:
    image: dll_web
    env_file: .env
    command: [celery, worker, --app=dll.configuration.celery.app, --concurrency=1, --loglevel=DEBUG]
    user: "1000:1000"
    volumes:
      - .:/code
    depends_on:
      - db
      - redis
      - web
  solr:
    build:
      context: .
      dockerfile: Dockerfile.solr
    ports:
      - "8983:8983"
    volumes:
      - ./solr/conf:/opt/solr/server/solr/configsets/dll
    entrypoint:
      - solr-precreate
    command: ["dll-default", "/opt/solr/server/solr/configsets/dll"]
