variables:
    CONTAINER_REGISTRY: collaborating.tuhh.de:5005
    CONTAINER_TEST_IMAGE: ${CONTAINER_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:${CI_COMMIT_REF_SLUG}
    CONTAINER_STAGING_IMAGE: ${CONTAINER_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:latest
    CONTAINER_STAGING_SOLR_IMAGE: ${CONTAINER_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:solr-latest
    CONTAINER_RELEASE_IMAGE: ${CONTAINER_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:release
    CONTAINER_RELEASE_SOLR_IMAGE: ${CONTAINER_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:solr-release
    BASE_IMAGE: ${CONTAINER_REGISTRY}/itbh/tnt/digital-learning-lab/dll-docker
    DOCKER_FILE_PATH: .

stages:
    - lint
    - register
    - test
    - deploy

black:
  stage: lint
  image: ${CONTAINER_REGISTRY}/itbh/tnt/digital-learning-lab/python-black:latest
  tags:
    - dll-docker
  script:
    - black --check .


register_staging_test_python_image:
    stage: register
    before_script:
        - docker system prune -a -f
        - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CONTAINER_REGISTRY}
    script:
        - docker build --no-cache -t ${CONTAINER_STAGING_IMAGE}-staging-test ${DOCKER_FILE_PATH}
        - docker push ${CONTAINER_STAGING_IMAGE}-staging-test
    tags:
        - dll-shell
    only:
        - develop

register_staging_solr_image:
    stage: register
    before_script:
        - docker system prune -a -f
        - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CONTAINER_REGISTRY}
    script:
        - docker build --no-cache -t ${CONTAINER_STAGING_SOLR_IMAGE} ${DOCKER_FILE_PATH} -f Dockerfile.solr
        - docker push ${CONTAINER_STAGING_SOLR_IMAGE}
    tags:
        - dll-shell
    only:
        - develop
    when: manual

test_staging_image:
    stage: test
    image: ${CONTAINER_STAGING_IMAGE}-staging-test
    services:
      - postgres:12-alpine
      - name: ${CONTAINER_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}:solr-latest
        alias: solr

    script:
      - coverage run --source=/code/dll/ -m pytest /code/dll/
      - coverage report
    tags:
        - dll-docker
    variables:
        POSTGRES_DB: "postgres"
        POSTGRES_USER: "postgres"
        POSTGRES_PASSWORD: ""
        POSTGRES_HOST_AUTH_METHOD: trust
        REDIS_HOSTNAME: "redis"
        DATABASE_USER: "postgres"
        DATABASE_NAME: "postgres"
        DATABASE_HOST: "postgres"
        DJANGO_DEBUG: "True"
        CELERY_TASK_ALWAYS_EAGER: "True"
        SOLR_HOSTNAME: "solr"
        EMAIL_HOST: "floki.rz.tuhh.de"
        EMAIL_PORT: "25"
        EMAIL_USE_TLS: "False"
        EMAIL_SENDER: "j.doe@example.com"
        CONTACT_EMAIL_BSB: "j.doe@example.com"
        CONTACT_EMAIL_DLL: "j.doe@example.com"
        META_SITE_PROTOCOL: https
        META_SITE_DOMAIN: staging.digitallearninglab.de
        DEFAULT_USER_EMAIL: digital.learning.lab@tuhh.de
    only:
        - develop

register_staging_python_image:
  stage: deploy
  before_script:
    - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CONTAINER_REGISTRY}
  script:
    - echo "Reached deployment stage. Retagging staging-test image for automatic deployment via keel."
    - docker tag ${CONTAINER_STAGING_IMAGE}-staging-test ${CONTAINER_STAGING_IMAGE}-staging
    - docker push ${CONTAINER_STAGING_IMAGE}-staging
  tags:
    - dll-shell
  only:
    - develop

register_prod_python_image:
    stage: register
    before_script:
        - docker system prune -a -f
        - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CONTAINER_REGISTRY}
    script:
        - docker build --no-cache -t ${CONTAINER_RELEASE_IMAGE} ${DOCKER_FILE_PATH}
        - docker push ${CONTAINER_RELEASE_IMAGE}
    tags:
        - dll-shell
    only:
        - master
    when: manual

register_prod_solr_image:
    stage: register
    before_script:
        - docker system prune -a -f
        - docker login -u gitlab-ci-token -p ${CI_JOB_TOKEN} ${CONTAINER_REGISTRY}
    script:
        - docker build --no-cache -t ${CONTAINER_RELEASE_SOLR_IMAGE} ${DOCKER_FILE_PATH} -f Dockerfile.solr
        - docker push ${CONTAINER_RELEASE_SOLR_IMAGE}
    tags:
        - dll-shell
    only:
        - master
    when: manual
